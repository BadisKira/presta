services:
  db:
    container_name: presta-db
    image: "postgres:16-alpine3.21"
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "root" ]
      timeout: 45s
      interval: 10s
      retries: 10
    volumes:
      - presta-db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: presta-db
    networks:
      - presta-network
    ports:
      - "5432:5432"

#  backend:
#    container_name: backend
#    depends_on:
#      - backend-db
#    build:
#      context: ./back/.
#    volumes:
#      - ./data:/app/data
#    environment:
#      - SPRING_DATASOURCE_URL=jdbc:postgresql://backend-db/insta_lite_db
#      - SPRING_DATASOURCE_USERNAME=instaliteadmin
#      - SPRING_DATASOURCE_PASSWORD=instAl1tâ‚¬.!
#      - RESOURCE_PATH=/app/data
#    networks:
#      - instalite
#    ports:
#      - "8080:8080"

#  frontend:
#    container_name: frontend
#    depends_on:
#      - backend
#    build:
#      context: ./front/.
#    networks:
#      - instalite
#    ports:
#      - "5173:3000"


  adminer:
    container_name: presta-adminer
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - presta-network
    depends_on:
      - db


networks:
  presta-network:
    driver: bridge

volumes:
  presta-db-data: